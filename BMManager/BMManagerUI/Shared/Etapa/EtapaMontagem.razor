@rendermode InteractiveServer
@using BMManagerLN
@using BMManagerLN.SubMoveis
@using BMManagerLN.SubMateriais
@inject APIBMManagerLN ln

<div class="EtapaMontagem">
    @if (Etapa == null)
    {
        <p>A carregar etapa ...</p>
        <img src="/imagens/Imagem.png" />
    }
    else
    {
        <div class="ImagemEtapa">
            @if (_imagemEtapa == null)
            {
                <img src="/imagens/Imagem.png" />
            }
            else
            {
                <img src="@_imagemEtapa" />
                //<img src="/imagens/Imagem.png" />
            }
        </div>
        <div class="MateriaisNecessarios">
            @if (_materiais == null)
            {
                <img src="/imagens/Imagem.png" />
                <p>A carregar materiais ...</p>
            }
            else
            {
                foreach (KeyValuePair<Material, int> materialQuantidade in _materiais)
                {
                    Material material = materialQuantidade.Key;
                    int quantidade = materialQuantidade.Value;
                    string imagem = ln.ByteArrayParaImagem(material.Imagem);
                    //<img src="/imagens/Imagem.png" />
                    <div class="Material">
                        <img src="@imagem" />
                        <span>X @quantidade</span>
                    </div>
                }
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public Etapa Etapa { get; set; }
    private string? _imagemEtapa = "/imagens/Imagem.png";
    private Dictionary<Material, int>? _materiais;
    protected override async Task OnInitializedAsync()
    {
        _materiais = await ln.GetMateriaisEtapa(Etapa.Codigo_Etapa);
        _imagemEtapa = ln.ByteArrayParaImagem(Etapa.Imagem);
    }
}
