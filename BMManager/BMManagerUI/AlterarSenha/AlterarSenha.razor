@page "/alterarsenha"
@rendermode InteractiveServer
@inject APIBMManagerLN ln
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]

<Titulo Nome="Alterar senha" />

<div class="IniciarSessao">
    <div class="esquema-senhas">
        <div>
            <h4>Confirme a senha atual</h4>
            <input type="password" @bind="senhaAtual" />
        </div>
        <div>
            <h4>Nova senha</h4>
            <input type="password" @bind="senha" />
        </div>
        <div>
            <h4>Confirme a nova senha</h4>
            <input type="password" @bind="nsenha" />
        </div>
    </div>
    <div class="@MensagemClasse">
        <p>@mensagem</p>
    </div>
    <div class="Botoes">
        <div>
            <Botao Nome="Voltar" Url="menuinicial" />
        </div>
        <div>
            <Botao Nome="Alterar" Metodo="Alterar" />
        </div>
    </div>
</div>

@code {
    private string senhaAtual = "";
    private string senha = "";
    private string nsenha = "";
    private string mensagem = "";
    private bool erro = false;

    private string? userCodigo;

    private string MensagemClasse => erro ? "ErroMensagem" : "";

    private async Task Alterar()
    {
        mensagem = "";

        if (senha == "" || nsenha == "" || senhaAtual == "")
        {
            mensagem = "Por favor, preencha todos os campos.";
            erro = true;
            return;
        }

        if (senha != nsenha)
        {
            mensagem = "A nova senha e a confirmação não coincidem.";
            erro = true;
            return;
        }

        if (userCodigo == null) {
            var authState = await AuthenticationStateProvider
            .GetAuthenticationStateAsync();
            var user = authState.User;
            var claims = user.Claims;
            userCodigo = user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value;
        }


        if (string.IsNullOrEmpty(userCodigo) || !int.TryParse(userCodigo, out int codigoFuncionario))
        {
            mensagem = "Erro ao identificar o usuário.";
            erro = true;
            return;
        }

        var funcionario = await ln.AutenticarUtilizador(userCodigo, senhaAtual);
        if (funcionario == null)
        {
            mensagem = "Senha atual incorreta.";
            erro = true;
            return;
        }

        var sucesso = await ln.AlterarSenha(codigoFuncionario, senha);
        if (sucesso)
        {
            mensagem = "Senha alterada com sucesso!";
            erro = false;
            senhaAtual = senha = nsenha = "";
        }
        else
        {
            erro = true;
            mensagem = "Erro ao alterar a senha. Tente novamente.";
        }
    }
}
