@page "/moveis/registar/adicionar_etapa"
@rendermode InteractiveServer
@using BMManagerLN
@using BMManagerLN.SubMoveis
@inject APIBMManagerLN ln
@inject NavigationManager NavigationManager
@inject MovelTemp movelTemp

<Titulo Nome="Adicionar etapa" />

<div class="InformacoesRegisto">
    <EditForm Model="@movelTemp" OnValidSubmit="@RegistarEtapa">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div>
            <h4>Imagem</h4>
            <InputFile id="nome" @bind-Value="@imagem" />
        </div>
        <div>
            <h4>Materiais</h4>
            <InputNumber id="nome" @bind-Value="@novoMaterialId" />
            <InputNumber id="nome" @bind-Value="@novoMaterialQuantidade" />
            <button type="button" @onclick="AdicionarMaterial">Adicionar</button>

        </div>

        <div>
            <ul>
                @foreach ((int idMaterial, int quantidade) in materiais)
                {
                    <li>@idMaterial @quantidade</li>
                }
            </ul>
        </div>
        <div class="esp">
        </div>
        <div class="Botoes">
            <Botao Nome="Voltar" Url="moveis/registar" />
            <Botao Nome="Registar" />
        </div>
    </EditForm>
</div>

@code {
    private byte[] imagem = new byte[829440];
    private List<(int,int)> materiais = new List<(int,int)>();

    private async Task RegistarEtapa()
    {
        movelTemp.EtapasRegistadas += 1;
        movelTemp.NovoMovelEtapas.Add(movelTemp.EtapasRegistadas, (imagem, movelTemp.EtapasRegistadas, materiais));
        NavigationManager.NavigateTo("/moveis/registar");
    }
    private int novoMaterialId;
    private int novoMaterialQuantidade;

    private void AdicionarMaterial()
    {
        materiais.Add((novoMaterialId, novoMaterialQuantidade));
        novoMaterialId = 0;
        novoMaterialQuantidade = 0;
    }

}